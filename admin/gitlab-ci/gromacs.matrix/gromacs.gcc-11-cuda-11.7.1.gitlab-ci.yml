# Test goal: CUDA GPU communications with OpenMPI
# Test intents (should change rarely and conservatively):
#   OS: Ubuntu oldest supported
#   GPU: CUDA newest supported with its newest supported gcc
#   HW: dual NVIDIA GPU
#   MPI: OpenMPI
#   Features: GPU direct communications (manual) + update (regression tests with dual GPU)
#   Scope: configure, build, regression tests
# Test implementation choices (free to change as needed):
#   OS: Ubuntu 20.04
#   Build type: RelWithDebInfo
#   Compiler: GCC 11.1
#   GPU: CUDA 11.7.1
#   SIMD: SSE 4.1
#   FFT: FFTW3
#   Parallelism np/ntomp: 4/1 (regression tests with dual GPU)

gromacs:gcc-11-cuda-11.7.1:configureMPI:
  extends:
    - .gromacs:base:configure
    - .use-gcc:base
    - .use-cuda
    - .use-mpi
    - .rules:merge-and-post-merge-acceptance
  image: ${CI_REGISTRY}/gromacs/gromacs/ci-ubuntu-20.04-gcc-11-cuda-11.7.1
  variables:
    CMAKE: /usr/local/cmake-3.18.4/bin/cmake
    CMAKE_SIMD_OPTIONS: "-DGMX_SIMD=SSE4.1"
    CMAKE_EXTRA_OPTIONS: "-DGMX_USE_CUFFTMP=ON -DcuFFTMp_ROOT=/opt/nvidia/hpc_sdk/Linux_x86_64/2022/math_libs"
    COMPILER_MAJOR_VERSION: 11

gromacs:gcc-11-cuda-11.7.1:buildMPI:
  extends:
    - .variables:default
    - .gromacs:base:build
    - .before_script:default
    - .use-ccache
    - .rules:merge-and-post-merge-acceptance
  image: ${CI_REGISTRY}/gromacs/gromacs/ci-ubuntu-20.04-gcc-11-cuda-11.7.1
  variables:
    CMAKE: /usr/local/cmake-3.18.4/bin/cmake
  needs:
    - job: gromacs:gcc-11-cuda-11.7.1:configureMPI

gromacs:gcc-11-cuda-11.7.1:testMPI:
  extends:
    - .gromacs:base:test
    - .rules:post-merge-acceptance
  image: ${CI_REGISTRY}/gromacs/gromacs/ci-ubuntu-20.04-gcc-11-cuda-11.7.1
  variables:
    CMAKE: /usr/local/cmake-3.18.4/bin/cmake
    KUBERNETES_EXTENDED_RESOURCE_NAME: "nvidia.com/gpu"
    KUBERNETES_EXTENDED_RESOURCE_LIMIT: 1
    GMX_ENABLE_DIRECT_GPU_COMM: 1
    GMX_GPU_PME_DECOMPOSITION: 1
    # Flag that cuFFTMp should be disabled when running on incompatible devices
    GMX_CI_DISABLE_CUFFTMP_DECOMPOSITION_ON_INCOMPATIBLE_DEVICES: 1
    # Location of CUDA FFT library, required for preload to avoid cuFFTMp on incompatible devices 
    CUFFTLIB: "/opt/nvidia/hpc_sdk/Linux_x86_64/2022/math_libs/11.7/lib64/libcufft.so"
    # cuFFTMp uses NVSHMEM, which in turn will use NCCL on single-node when available
    # But NCCL has extra restrictions (such as only 1 rank per GPU) so we disable for CI
    NVSHMEM_DISABLE_NCCL: 1
    GMX_TEST_LABELS: "QuickGpuTest|SlowGpuTest"
  tags:
    - k8s-scilifelab
  needs:
    - job: gromacs:gcc-11-cuda-11.7.1:buildMPI

gromacs:gcc-11-cuda-11.7.1:regressiontest-gpucommupd-MPI:
  # Test parallelism np/ntomp: 4/1
  # Test parallelism GPU: direct communications, update
  extends:
    - .gromacs:base:regressiontest
    - .rules:post-merge-acceptance
  image: ${CI_REGISTRY}/gromacs/gromacs/ci-ubuntu-20.04-gcc-11-cuda-11.7.1
  variables:
    CMAKE: /usr/local/cmake-3.18.4/bin/cmake
    KUBERNETES_EXTENDED_RESOURCE_NAME: "nvidia.com/gpu"
    KUBERNETES_EXTENDED_RESOURCE_LIMIT: 2
    REGRESSIONTEST_PME_RANK_NUMBER: 0
    REGRESSIONTEST_TOTAL_RANK_NUMBER: 4
    REGRESSIONTEST_OMP_RANK_NUMBER: 1
    REGRESSIONTEST_PARALLEL: "-np"
    GMX_ENABLE_DIRECT_GPU_COMM: 1
  tags:
    - k8s-scilifelab
  needs:
    - job: gromacs:gcc-11-cuda-11.7.1:buildMPI
    - job: regressiontests:prepare
  artifacts:
    paths:
      - regressiontests
    when: always
    expire_in: 1 week

